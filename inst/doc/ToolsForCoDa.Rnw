%\VignetteIndexEntry{Multivariate tools for compositional data analysis: the \pkg{ToolsForCoDA} package}
\documentclass[nojss]{jss}
%\documentclass[article]{jss}
\usepackage[cp1252]{inputenc}
\usepackage{amsmath, amsfonts}
\usepackage{float,amssymb}
%\usepackage{hyperref}
\usepackage{latexsym}
\usepackage{wasysym}

%% almost as usual
\author{Jan Graffelman\\Universitat Polit\`ecnica de Catalunya\\version 1.0.0\\ \today}
\title{Multivariate tools for compositional data analysis: the \pkg{ToolsForCoDA} package}

%% for pretty printing and a nice hypersummary also set:
\Plainauthor{Jan Graffelman} %% comma-separated
\Plaintitle{Multivariate tools for compositional data analysis: the \pkg{ToolsForCoDA} package}
\Shorttitle{Tools for CoDa in \proglang{R}} %% a short title (if necessary)

%% an abstract and keywords
\Abstract{Package \pkg{ToolsForCoDA} contains some functions for multivariate analysis with compositional data. It currently provides functions for doing compositional canonical correlation analysis. This analysis requires two data matrices of compositions, which can be adequately tranformed and used as entries in a specialized program for canonical correlation analysis, that is able to deal with singular covariance matrices. Some additional methods for the multivariate analysis of compositional data are planned to be included.}
\Keywords{log-ratio tranformation, canonical correlation analysis, generalized inverse}
\Plainkeywords{log-ratio tranformation, canonical correlation analysis, generalized inverse}

\Address{
  Jan Graffelman\\
  Department of Statistics and Operations Research\\
  Universitat Polit\`ecnica de Catalunya\\
  Barcelona, Spain\\
  E-mail: \email{jan.graffelman@upc.edu}\\
  URL: \url{http://www-eio.upc.es/~jan/}
}
%% It is also possible to add a telephone and fax number
%% before the e-mail in the following format:
%% Telephone: +43/1/31336-5053
%% Fax: +43/1/31336-734

%% for those who use Sweave please include the following line (with % symbols):
%% need no \usepackage{Sweave.sty}

%% end of declarations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}


\newcommand{\Real}{ {\mathbb{R}} }        %real numbers/space
\newcommand{\gm}{ {\mathrm{g_m}} }      %geometric mean
\newcommand{\mbf}{ \mathbf }            %boldface for vectors and matrices
\newcommand{\mbfg}{ \boldsymbol }       %boldface for greek and number vectors/matrices
\newcommand{\clr}{ \mathrm{clr} }       % clr-transformation
\newcommand{\alr}{ \mathrm{alr} }       % alr-transformation
\newcommand{\ilr}{ \mathrm{ilr} }       % ilr-transformation

\section{Introduction}

The \pkg{ToolsForCoDa} package provides some tools for 
the multivariate analysis of compositional data in the \proglang{R}
environment~\citep{rrr}. The package is available from the Comprehensive \proglang{R} Archive Network (CRAN) at \url{http://CRAN.R-project.org/package=ToolsForCoDa}.\\

This vignette describes the first version 1.0.0 of the package, which mainly provides functions for doing canonical correlation analysis with compositional data.\\

The remainder of this vignette shows an \proglang{R} example session showing how
to analyze two sets of compositions with the functions of the package, using a small artificial data set included in the package.\\

\section{An example session for a canonical analysis of compositions}
\label{sec:session}

The \pkg{ToolsForCoDa} package can be installed as usual via the command line or graphical user interfaces, e.g., the package can be installed and loaded by:

<<eval=TRUE,echo=FALSE>>=
options(prompt = "R> ", continue = "+ ", width = 70, useFancyQuotes = FALSE)
@

<<eval=FALSE,echo=TRUE>>=
install.packages("ToolsForCoDa")
library("ToolsForCoDa")
@

The document describing the package (this document) can be
consulted from inside \proglang{R} by typing:
%

<<eval=FALSE,echo=TRUE>>=
vignette("ToolsForCoDa")
@

In the remainder we show how to perform the canonical analysis described in 
Section 3.1 of Graffelman et al.~(\citeyear{Graffelman}).\\

We first load two artificial 3-part compositions.

<<echo=TRUE>>=
library(HardyWeinberg) # needed for making some ternary diagrams
library(ToolsForCoDa)
data("Artificial")
Xsim.com <- Artificial$Xsim.com
Ysim.com <- Artificial$Ysim.com
@


We make the ternary diagrams of the two sets of compositions (Figure 1)

\begin{figure}[htb]
\centering
<<echo=TRUE,fig=TRUE>>=
opar <- par(mfrow=c(1,2),mar=c(3,3,2,0)+0.5,mgp=c(2,1,0),pty="s")
par(mfg=c(1,1))
out <- HWTernaryPlot(Xsim.com,50,region=0,vbounds=FALSE,hwcurve=FALSE,
                     vertexlab=c(expression(X[1]),
                                 expression(X[2]),
                                 expression(X[3])))
par(mfg=c(1,2))
out <- HWTernaryPlot(Ysim.com,50,region=0,vbounds=FALSE,
                     hwcurve=FALSE,
                     vertexlab=c(expression(Y[1]),
                                 expression(Y[2]),
                                 expression(Y[3])))
par(opar)
@
\end{figure}

\clearpage
\newpage

We do the centred log-ratio transformation

<<echo=TRUE>>=
Xsub.clr <- clrmat(Xsim.com)
Ysub.clr <- clrmat(Ysim.com)
colnames(Xsub.clr) <- paste("X",1:3,sep="")
colnames(Ysub.clr) <- paste("Y",1:3,sep="")
@

We perform the canonical analysis:

<<echo=TRUE>>=
res.cco <- canocov(Xsub.clr,Ysub.clr)
@


And we reproduce the results in Table 1. The canonical correlations are obtained as

<<echo=TRUE>>=
round(diag(res.cco$ccor),digits=3)
@

The canonical weights of the X set and the Y set are obtained by:

<<echo=TRUE>>=
res.cco$A
res.cco$B
@

\newpage

The canonical loadings of the X set and the Y set are obtained by

<<echo=TRUE>>=
res.cco$Rxu
res.cco$Ryv
@

The adequacy coefficients of the X set and the Y set:

<<echo=TRUE>>=
res.cco$fitXs
res.cco$fitYs
@

The redundancy coefficients of the X set and the Y set

<<echo=TRUE>>=
res.cco$fitXp
res.cco$fitYp
@



Finally, we make the biplots given in Figure 2 of 

\newpage


<<echo=TRUE,fig=FALSE>>=

opar <- par(mfrow=c(2,2),mar=c(3,3,2,0)+0.5,mgp=c(2,1,0))
par(mfg=c(1,1))
#
# Figure A
#
Z <- rbind(res.cco$Fs,res.cco$Gp)
plot(Z[,1],Z[,2],type="n",xlim=c(-1,1),ylim=c(-1,1),asp=1)
arrows(0,0,Z[1:3,1],Z[1:3,2],col="red")
arrows(0,0,Z[4:6,1],Z[4:6,2],col="blue")
text(res.cco$Fs[,1],res.cco$Fs[,2],
     c(expression(X[1]),expression(X[2]),expression(X[3])))
text(res.cco$Gp[,1],res.cco$Gp[,2],
     c(expression(Y[1]),expression(Y[2]),expression(Y[3])),pos=c(4,3,1))
grid()
fa <- 0.15
points(fa*res.cco$U[,1],fa*res.cco$U[,2])

par(mfg=c(1,2))
#
# Figure B
#

Z <- rbind(res.cco$Fp,res.cco$Gs)
plot(Z[,1],Z[,2],type="n",xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),asp=1)
arrows(0,0,Z[1:3,1],Z[1:3,2],col="red")
arrows(0,0,Z[4:6,1],Z[4:6,2],col="blue")
text(res.cco$Fp[,1],res.cco$Fp[,2],
     c(expression(X[1]),expression(X[2]),expression(X[3])))
text(res.cco$Gs[,1],res.cco$Gs[,2],
     c(expression(Y[1]),expression(Y[2]),expression(Y[3])),pos=c(4,3,1))
grid()
fa <- 0.25
points(fa*res.cco$V[,1],fa*res.cco$V[,2])

par(mfg=c(2,1))
#
# Standardizing the transformed data
#

Xstan.clr <- scale(Xsub.clr)
Ystan.clr <- scale(Ysub.clr)
res.stan.cco <- canocov(Xstan.clr,Ystan.clr)

#
# Figure C
#

Z <- rbind(res.stan.cco$Fs,res.stan.cco$Gp)
plot(Z[,1],Z[,2],type="n",xlim=c(-1,1),ylim=c(-1,1),asp=1)
arrows(0,0,Z[1:3,1],Z[1:3,2],col="red")
arrows(0,0,Z[4:6,1],Z[4:6,2],col="blue")
text(res.stan.cco$Fs[,1],res.stan.cco$Fs[,2],
     c(expression(X[1]),expression(X[2]),expression(X[3])))
text(res.stan.cco$Gp[,1],res.stan.cco$Gp[,2],
     c(expression(Y[1]),expression(Y[2]),expression(Y[3])),pos=c(4,3,1))
grid()
fa <- 0.2
points(fa*res.stan.cco$U[,1],fa*res.stan.cco$U[,2])
circle()

par(mfg=c(2,2))
#
# Figure D
#

Z <- rbind(res.stan.cco$Fp,res.stan.cco$Gs)
plot(Z[,1],Z[,2],type="n",xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),asp=1)
arrows(0,0,Z[1:3,1],Z[1:3,2],col="red")
arrows(0,0,Z[4:6,1],Z[4:6,2],col="blue")
text(res.stan.cco$Fp[,1],res.stan.cco$Fp[,2],
     c(expression(X[1]),expression(X[2]),expression(X[3])))
text(res.stan.cco$Gs[,1],res.stan.cco$Gs[,2],
     c(expression(Y[1]),expression(Y[2]),expression(Y[3])),pos=c(4,3,1))
grid()
fa <- 0.25
points(fa*res.stan.cco$V[,1],fa*res.stan.cco$V[,2])
circle()
par(opar)
@

\newpage

\begin{figure}[htb]
\centering
<<echo=FALSE,fig=TRUE>>=

opar <- par(mfrow=c(2,2),mar=c(3,3,2,0)+0.5,mgp=c(2,1,0))
par(mfg=c(1,1))
#
# Figure A
#
Z <- rbind(res.cco$Fs,res.cco$Gp)
plot(Z[,1],Z[,2],type="n",xlim=c(-1,1),ylim=c(-1,1),asp=1)
arrows(0,0,Z[1:3,1],Z[1:3,2],col="red")
arrows(0,0,Z[4:6,1],Z[4:6,2],col="blue")
text(res.cco$Fs[,1],res.cco$Fs[,2],
     c(expression(X[1]),expression(X[2]),expression(X[3])))
text(res.cco$Gp[,1],res.cco$Gp[,2],
     c(expression(Y[1]),expression(Y[2]),expression(Y[3])),pos=c(4,3,1))
grid()
fa <- 0.15
points(fa*res.cco$U[,1],fa*res.cco$U[,2])

par(mfg=c(1,2))
#
# Figure B
#

Z <- rbind(res.cco$Fp,res.cco$Gs)
plot(Z[,1],Z[,2],type="n",xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),asp=1)
arrows(0,0,Z[1:3,1],Z[1:3,2],col="red")
arrows(0,0,Z[4:6,1],Z[4:6,2],col="blue")
text(res.cco$Fp[,1],res.cco$Fp[,2],
     c(expression(X[1]),expression(X[2]),expression(X[3])))
text(res.cco$Gs[,1],res.cco$Gs[,2],
     c(expression(Y[1]),expression(Y[2]),expression(Y[3])),pos=c(4,3,1))
grid()
fa <- 0.25
points(fa*res.cco$V[,1],fa*res.cco$V[,2])

par(mfg=c(2,1))
#
# Standardizing the transformed data
#

Xstan.clr <- scale(Xsub.clr)
Ystan.clr <- scale(Ysub.clr)
res.stan.cco <- canocov(Xstan.clr,Ystan.clr)

#
# Figure C
#

Z <- rbind(res.stan.cco$Fs,res.stan.cco$Gp)
plot(Z[,1],Z[,2],type="n",xlim=c(-1,1),ylim=c(-1,1),asp=1)
arrows(0,0,Z[1:3,1],Z[1:3,2],col="red")
arrows(0,0,Z[4:6,1],Z[4:6,2],col="blue")
text(res.stan.cco$Fs[,1],res.stan.cco$Fs[,2],
     c(expression(X[1]),expression(X[2]),expression(X[3])))
text(res.stan.cco$Gp[,1],res.stan.cco$Gp[,2],
     c(expression(Y[1]),expression(Y[2]),expression(Y[3])),pos=c(4,3,1))
grid()
fa <- 0.2
points(fa*res.stan.cco$U[,1],fa*res.stan.cco$U[,2])
circle()

par(mfg=c(2,2))
#
# Figure D
#

Z <- rbind(res.stan.cco$Fp,res.stan.cco$Gs)
plot(Z[,1],Z[,2],type="n",xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),asp=1)
arrows(0,0,Z[1:3,1],Z[1:3,2],col="red")
arrows(0,0,Z[4:6,1],Z[4:6,2],col="blue")
text(res.stan.cco$Fp[,1],res.stan.cco$Fp[,2],
     c(expression(X[1]),expression(X[2]),expression(X[3])))
text(res.stan.cco$Gs[,1],res.stan.cco$Gs[,2],
     c(expression(Y[1]),expression(Y[2]),expression(Y[3])),pos=c(4,3,1))
grid()
fa <- 0.25
points(fa*res.stan.cco$V[,1],fa*res.stan.cco$V[,2])
circle()
par(opar)
@
\end{figure}
\clearpage


\section*{Acknowledgments}

This work was partially supported by grant 2014SGR551
from the Ag\`encia de Gesti\'o d'Ajuts Universitaris i de
Recerca (AGAUR) of the Generalitat de Catalunya, by grant
MTM2015-65016-C2-2-R (MINECO/FEDER) of the Spanish
Ministry of Economy and Competitiveness and European
Regional Development Fund.

\bibliography{ToolsForCoDa}

\end{document}
